apiVersion: v1
data:
  extraconfig-from-values.hcl: >-

    disable_mlock = true

    ui = true         listener "tcp"          {           tls_disable =
    1           address = "[::]:8200"           cluster_address =
    "[::]:8201"         }         seal "azurekeyvault"          {          
    tenant_id       = "d6f40208-0e69-4598-a450-1e46d6668a38"          
    client_id       = "560878d3-e08a-4f6b-b4c4-075d6c433e2e"          
    client_secret   = "ImD8Q~PTrtDXoPdD1KEMjOpteZTiXm6KLuTOubKf"          
    vault_name      = "binesty-key-vault"           key_name        =
    "vault-hashicorp-kubernetes-unseal-key"           subscription_id =
    "b8bdcba6-cce6-459d-a1a4-059f6b590f8e"         }         storage
    "raft"          {           path = "/vault/data"         }        
    service_registration "kubernetes" {}
kind: ConfigMap
metadata:
  creationTimestamp: '2024-05-31T19:09:05Z'
  labels:
    app.kubernetes.io/instance: vault
  name: vault-config
  namespace: vault  
---

apiVersion: v1
kind: Service
metadata:  
  labels:
    app.kubernetes.io/instance: vault
  name: vault
  namespace: vault
spec:
  ports:
    - name: http
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    component: server
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: vault
  name: vault-agent-injector-svc
  namespace: vault
spec:
  ports:
    - name: https
      port: 443
      targetPort: 8080
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault-agent-injector
    component: webhook
---

apiVersion: v1
kind: Service
metadata:
  annotations: null
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    helm.sh/chart: vault-0.28.0
    vault-internal: 'true'
  name: vault-internal
  namespace: vault
spec:
  clusterIP: None
  ports:
    - name: http
      port: 8200
      targetPort: 8200
    - name: https-internal
      port: 8201
      targetPort: 8201
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    component: server
---

apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/instance: vault
  name: vault-ui
  namespace: vault
spec:
  ports:
    - name: http
      port: 8200
      targetPort: 8200
  publishNotReadyAddresses: true
  selector:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/name: vault
    component: server
  type: ClusterIP
---  

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: vault
  name: vault
  namespace: vault
---  

apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/instance: vault    
    app.kubernetes.io/name: vault-agent-injector
  name: vault-agent-injector
  namespace: vault
---  

apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  labels:
    app.kubernetes.io/instance: vault    
    app.kubernetes.io/name: vault-agent-injector
  name: vault-agent-injector-cfg
webhooks:
  - admissionReviewVersions:
      - v1
      - v1beta1
    clientConfig:
      caBundle: ''
      service:
        name: vault-agent-injector-svc
        namespace: vault
        path: /mutate
    failurePolicy: Ignore
    matchPolicy: Exact
    name: vault.hashicorp.com
    objectSelector:
      matchExpressions:
        - key: app.kubernetes.io/name
          operator: NotIn
          values:
            - vault-agent-injector
    rules:
      - apiGroups:
          - ''
        apiVersions:
          - v1
        operations:
          - CREATE
          - UPDATE
        resources:
          - pods
    sideEffects: None
    timeoutSeconds: 30
---

apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/instance: vault    
    app.kubernetes.io/name: vault-agent-injector
    component: webhook
  name: vault-agent-injector
  namespace: vault
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault-agent-injector
      component: webhook
  template:
    metadata:
      labels:
        app.kubernetes.io/instance: vault
        app.kubernetes.io/name: vault-agent-injector
        component: webhook
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: vault
                  app.kubernetes.io/name: vault-agent-injector
                  component: webhook
              topologyKey: kubernetes.io/hostname
      containers:
        - args:
            - agent-inject
            - 2>&1           
          resources:
            limits:
              memory: 100Mi
              cpu: "0.3"
            requests:
              memory: 100Mi
              cpu: "0.3"             
          env:
            - name: AGENT_INJECT_LISTEN
              value: ':8080'
            - name: AGENT_INJECT_LOG_LEVEL
              value: info
            - name: AGENT_INJECT_VAULT_ADDR
              value: 'http://vault.vault.svc:8200'
            - name: AGENT_INJECT_VAULT_AUTH_PATH
              value: auth/kubernetes
            - name: AGENT_INJECT_VAULT_IMAGE
              value: 'hashicorp/vault:1.16.1'
            - name: AGENT_INJECT_TLS_CERT_FILE
              value: /etc/webhook/certs/tls.crt
            - name: AGENT_INJECT_TLS_KEY_FILE
              value: /etc/webhook/certs/tls.key
            - name: AGENT_INJECT_LOG_FORMAT
              value: standard
            - name: AGENT_INJECT_REVOKE_ON_SHUTDOWN
              value: 'false'
            - name: AGENT_INJECT_CPU_REQUEST
              value: 250m
            - name: AGENT_INJECT_CPU_LIMIT
              value: 500m
            - name: AGENT_INJECT_MEM_REQUEST
              value: 64Mi
            - name: AGENT_INJECT_MEM_LIMIT
              value: 128Mi
            - name: AGENT_INJECT_DEFAULT_TEMPLATE
              value: map
            - name: AGENT_INJECT_TEMPLATE_CONFIG_EXIT_ON_RETRY_FAILURE
              value: 'true'
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          image: 'hashicorp/vault-k8s:1.4.1'
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          name: sidecar-injector
          readinessProbe:
            failureThreshold: 2
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
          startupProbe:
            failureThreshold: 12
            httpGet:
              path: /health/ready
              port: 8080
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          volumeMounts:
            - mountPath: /etc/webhook/certs
              name: webhook-certs
              readOnly: true
      hostNetwork: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
      serviceAccountName: vault-agent-injector
      volumes:
        - name: webhook-certs
          secret:
            secretName: vault-binesty-certificate-key-pair
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/instance: vault    
    app.kubernetes.io/name: vault
  name: vault
  namespace: vault
spec:
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: vault
      app.kubernetes.io/name: vault
      component: server
  serviceName: vault-internal
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/instance: vault
        app.kubernetes.io/name: vault
        component: server
        helm.sh/chart: vault-0.28.0
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/instance: vault
                  app.kubernetes.io/name: vault
                  component: server
              topologyKey: kubernetes.io/hostname
      containers:
        - args:
            - >
              cp /vault/config/extraconfig-from-values.hcl
              /tmp/storageconfig.hcl;

              [ -n "${HOST_IP}" ] && sed -Ei "s|HOST_IP|${HOST_IP?}|g"
              /tmp/storageconfig.hcl;

              [ -n "${POD_IP}" ] && sed -Ei "s|POD_IP|${POD_IP?}|g"
              /tmp/storageconfig.hcl;

              [ -n "${HOSTNAME}" ] && sed -Ei "s|HOSTNAME|${HOSTNAME?}|g"
              /tmp/storageconfig.hcl;

              [ -n "${API_ADDR}" ] && sed -Ei "s|API_ADDR|${API_ADDR?}|g"
              /tmp/storageconfig.hcl;

              [ -n "${TRANSIT_ADDR}" ] && sed -Ei
              "s|TRANSIT_ADDR|${TRANSIT_ADDR?}|g" /tmp/storageconfig.hcl;

              [ -n "${RAFT_ADDR}" ] && sed -Ei "s|RAFT_ADDR|${RAFT_ADDR?}|g"
              /tmp/storageconfig.hcl;

              /usr/local/bin/docker-entrypoint.sh vault server
              -config=/tmp/storageconfig.hcl 
          command:
            - /bin/sh
            - '-ec'
          resources:
            limits:
              memory: 100Mi
              cpu: "0.3"
            requests:
              memory: 100Mi
              cpu: "0.3"  
          env:
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: VAULT_K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: VAULT_ADDR
              value: 'http://127.0.0.1:8200'
            - name: VAULT_API_ADDR
              value: 'http://$(POD_IP):8200'
            - name: SKIP_CHOWN
              value: 'true'
            - name: SKIP_SETCAP
              value: 'true'
            - name: HOSTNAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: VAULT_CLUSTER_ADDR
              value: 'https://$(HOSTNAME).vault-internal:8201'
            - name: HOME
              value: /home/vault
          image: 'hashicorp/vault:1.16.1'
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - /bin/sh
                  - '-c'
                  - sleep 5 && kill -SIGTERM $(pidof vault)
          name: vault
          ports:
            - containerPort: 8200
              name: http
            - containerPort: 8201
              name: https-internal
            - containerPort: 8202
              name: http-rep
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-ec'
                - vault status -tls-skip-verify
            failureThreshold: 2
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 3
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /vault/data
              name: data
            - mountPath: /vault/config
              name: config
            - mountPath: /home/vault
              name: home
      hostNetwork: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 100
      serviceAccountName: vault
      terminationGracePeriodSeconds: 10
      volumes:
        - configMap:
            name: vault-config
          name: config
        - emptyDir: {}
          name: home
  updateStrategy:
    type: OnDelete
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
        storageClassName: nfs-client
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/instance: vault    
    app.kubernetes.io/name: vault-agent-injector
  name: vault-agent-injector-clusterrole
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - patch
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: vault    
    app.kubernetes.io/name: vault-agent-injector
  name: vault-agent-injector-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-agent-injector-clusterrole
subjects:
  - kind: ServiceAccount
    name: vault-agent-injector
    namespace: vault
---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/instance: vault
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: vault
    helm.sh/chart: vault-0.28.0
  name: vault-server-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: 'system:auth-delegator'
subjects:
  - kind: ServiceAccount
    name: vault
    namespace: vault
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:    
    cert-manager.io/cluster-issuer: binesty-ca-issuer
    cert-manager.io/duration: 2160h # 90d
    cert-manager.io/renew-before: 360h # 15d
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: vault-ingress
  namespace: vault
spec:
  ingressClassName: nginx
  rules:
  - host: vault.binesty.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: vault
            port:
              number: 8200
  tls:
    - hosts:
        - vault.binesty.io
      secretName: vault-binesty-certificate-key-pair
---