apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-configmap
  namespace: keycloak
data:
  JAVA_OPTS_APPEND: '-Djgroups.dns.query=keycloak-service.keycloak.svc.binesty'
  KEYCLOAK_CACHE_STACK: kubernetes
  KEYCLOAK_CACHE_TYPE: ispn
  KEYCLOAK_DATABASE_HOST: keycloak-postgres-service.svc.binesty
  KEYCLOAK_DATABASE_PORT: '5432'
  KEYCLOAK_ENABLE_HTTPS: 'false'
  KEYCLOAK_ENABLE_STATISTICS: 'false'
  KEYCLOAK_HTTP_PORT: '8080'
  KEYCLOAK_LOG_LEVEL: INFO
  KEYCLOAK_LOG_OUTPUT: default
  KEYCLOAK_PRODUCTION: 'false'
  KEYCLOAK_PROXY: passthrough
---

apiVersion: v1
kind: Service
metadata:
  name: keycloak-postgres-service
  namespace: keycloak
  labels:
    app: postgres
spec:
  ports:
  - port: 5432
    name: postgres
  selector:
    app: keycloak-postgres
  type: ClusterIP
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: keycloak-postgres
  namespace: keycloak
spec:
  serviceName: keycloak-postgres-service
  replicas: 1
  selector:
    matchLabels:
      app: keycloak-postgres
  template:
    metadata:
      labels:
        app: keycloak-postgres
    spec:
      containers:
        - name: keycloak-postgres
          image: postgres:latest          
          envFrom:
            - secretRef:
                name: keycloak-secret
            - configMapRef:
                name: keycloak-configmap               
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: postgres-volume-claim
              mountPath: /var/lib/postgresql/data
          resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
  volumeClaimTemplates:
    - metadata:
        name: postgres-volume-claim
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 10Gi
---            

apiVersion: v1
kind: Service
metadata:
  name: keycloak-service
  namespace: keycloak
  labels:
    app: keycloak
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: keycloak
  type: ClusterIP
---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak
  namespace: keycloak
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      containers:
      - name: keycloak
        image: quay.io/keycloak/keycloak:23.0.4
        args: ["start-dev"]
        env:
        - name: KEYCLOAK_ADMIN
          valueFrom:
            secretKeyRef:
              key: KEYCLOAK_ADMIN
              name: keycloak-secret
        - name: KEYCLOAK_ADMIN_PASSWORD
          valueFrom:
            secretKeyRef:
              key: KEYCLOAK_ADMIN_PASSWORD
              name: keycloak-secret
        - name: KC_DB_USERNAME
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: POSTGRES_USER
        - name: KC_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: keycloak-secret
              key: POSTGRES_PASSWORD              
        - name: KC_HEALTH_ENABLED
          value: "true"
        - name: KC_METRICS_ENABLED
          value: "true"
        - name: KC_HTTP_ENABLED
          value: "true"  
        - name: KC_HOSTNAME_STRICT_HTTPS
          value: "false"                              
        - name: KC_LOG_LEVEL
          value: INFO
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        ports:
        - name: http
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 8080
          initialDelaySeconds: 250
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health/live
            port: 8080
          initialDelaySeconds: 500
          periodSeconds: 30
        resources:
            limits:
              memory: 512Mi
              cpu: "1"
            requests:
              memory: 256Mi
              cpu: "0.2"
---              

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:        
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: keycloak-ingress
  namespace: keycloak
spec:
  ingressClassName: nginx
  rules:
  - host: keycloak.binesty.corp
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: keycloak-service
            port:
              number: 80
---