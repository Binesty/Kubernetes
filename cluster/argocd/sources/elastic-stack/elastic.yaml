apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-backup-elastic
  namespace: elastic-stack
  labels:
    storage.k8s.io/name: nfs
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs-client
  resources:
    requests:
      storage: 1Gi
---     

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elasticsearch-cluster
  namespace: elastic-stack
spec:
  serviceName: elasticsearch
  replicas: 1
  selector:
    matchLabels:
      app: elasticsearch
  template:
    metadata:
      labels:
        app: elasticsearch
    spec:
      nodeSelector:
        node-group: application
      containers:
      - name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
        imagePullPolicy: IfNotPresent
        resources:
            limits:
              cpu: 1000m
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 2Gi
        ports:
        - containerPort: 9200
          name: rest
          protocol: TCP
        - containerPort: 9300
          name: inter-node
          protocol: TCP
        volumeMounts:
        - name: tls
          mountPath: "/usr/share/elasticsearch/config/certs"
          readOnly: true
        - name: data
          mountPath: /usr/share/elasticsearch/data
        - name: nfs-backup-elastic
          mountPath: /snaps               
        env:
          - name: path.repo
            value: /snaps  
          - name: cluster.name
            value: elasticsearch-cluster
          - name: node.name
            value: elasticsearch-cluster-0
          - name: discovery.seed_hosts
            value: "elasticsearch.binesty.io"
          - name: cluster.initial_master_nodes
            value: "elasticsearch-cluster-0"
          - name: ES_JAVA_OPTS
            value: "-Xms512m -Xmx512m"
          - name: bootstrap.memory_lock
            value: "false"
          - name: xpack.security.enabled
            value: "true"
          - name: xpack.security.transport.ssl.enabled
            value: "true"
          - name: xpack.security.transport.ssl.verification_mode
            value: "certificate"
          - name: xpack.security.transport.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.transport.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.transport.ssl.certificate_authorities
            value: "/usr/share/elasticsearch/config/certs/ca.crt"
          - name: xpack.security.http.ssl.enabled
            value: "true"            
          - name: xpack.security.http.ssl.key
            value: "/usr/share/elasticsearch/config/certs/tls.key"
          - name: xpack.security.http.ssl.certificate
            value: "/usr/share/elasticsearch/config/certs/tls.crt"
          - name: xpack.security.http.ssl.certificate_authorities          
            value: "/usr/share/elasticsearch/config/certs/ca.crt"   
          - name: ELASTIC_PASSWORD
            valueFrom:
              secretKeyRef:
                name: elastic-secret
                key: ELASTIC_PASSWORD            
      initContainers:
      - name: fix-permissions
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/elasticsearch/data", "chown -R 1000:1000 /snaps"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /usr/share/elasticsearch/data  
        - name: nfs-backup-elastic
          mountPath: /snaps            
      - name: increase-vm-max-map
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      - name: increase-fd-ulimit
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
      volumes: 
      - name: tls
        secret:
          secretName: elasticsearch-binesty-certificate-key-pair
          optional: false      
      - name: nfs-backup-elastic
        persistentVolumeClaim:
          claimName: nfs-backup-elastic    
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: elasticsearch
    spec:
      accessModes: [ "ReadWriteOnce" ]
      storageClassName: "longhorn" 
      resources:
        requests:
          storage: 20Gi
---

apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  namespace: elastic-stack
  labels:
    app: elasticsearch
spec:
  selector:
    app: elasticsearch
  clusterIP: None
  ports:
    - port: 9200
      name: rest
    - port: 9300
      name: inter-node
---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:        
    cert-manager.io/cluster-issuer: binesty-ca-issuer
    cert-manager.io/duration: 2160h # 90d
    cert-manager.io/renew-before: 360h # 15d
    nginx.ingress.kubernetes.io/rewrite-target: /
  name: elasticsearch-ingress
  namespace: elastic-stack
spec:
  ingressClassName: nginx
  rules:
  - host: elasticsearch.binesty.io
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: elasticsearch
            port:
              number: 9200
  tls:
    - hosts:
        - elasticsearch.binesty.io
      secretName: elasticsearch-binesty-certificate-key-pair              
---