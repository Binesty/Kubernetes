apiVersion: kafka.strimzi.io/v1beta2
kind: Kafka # strimzi
metadata:
  name: kafka-cluster
  namespace: kafka
spec:
  kafka:
    version: 3.7.0 # Kafka version
    # If have cruisecontrol must be greater than 1
    replicas: 3 # Replicas specifies the number of broker nodes.
    listeners: # Listeners configure how clients connect to the Kafka cluster
      - name: plain
        port: 9092
        type: internal
        tls: false
      - name: tls
        port: 9093
        type: internal
        tls: true
    storage:
      class: local-path
      type: persistent-claim
      size: 5Gi
      deleteClaim: true
    resources:
      requests:
        memory: 500Mi
        cpu: "1"
      limits:
        memory: 500Mi
        cpu: "1"
    template:
      pod:
        affinity:
          nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                    - key: broker
                      operator: In
                      values:
                      - kafka
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                    - key: strimzi.io/name
                      operator: In
                      values:
                      - kafka-cluster-kafka
                topologyKey: "kubernetes.io/hostname"
    config:
      #ssl.cipher.suites: "TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384"
      #ssl.enabled.protocols: "TLSv1.2"
      #ssl.protocol: "TLSv1.2"

      # Configuração do tamanho do segmento (Default: 1Gb)
      log.segment.bytes: 1073741824

      # The replication factor for the offsets topic (set higher to ensure availability).
      #  Default: 3
      offsets.topic.replication.factor: 2

      # https://kafka.apache.org/documentation/
      #  Default: 3
      transaction.state.log.replication.factor: 2

      # Overridden min.insync.replicas config for the transaction topic.
      #  Default: 2
      transaction.state.log.min.isr: 1

      # The default replication factors for automatically created topics
      #  Default: 1
      default.replication.factor: 1

      # Minimum number of replicas that must acknowledge a write for the write to be considered successful
      #  Default: 1
      min.insync.replicas: 2

      # Message format version the broker will use to append messages to the logs
      log.message.format.version: "3.7"

      # The number of hours to keep a log file before deleting it (in hours)
      #  Default: 168
      log.retention.hours: 168      # 7 days by default

      # Enables delete topic
      #  Default: true
      delete.topic.enable: "true"

      # Specify which version of the inter-broker protocol will be used
      inter.broker.protocol.version: "3.7"

      # Enable auto creation of topic on the server
      #  Default: true
      auto.create.topics.enable: "true"
      
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: kafka-metrics-config.yml

  zookeeper:
    # Must be odd numbers
    replicas: 1
    storage:
      type: persistent-claim # Persistent storage backed by AWS EBS
      size: 2Gi
      deleteClaim: true
    metricsConfig:
      type: jmxPrometheusExporter
      valueFrom:
        configMapKeyRef:
          name: kafka-metrics
          key: zookeeper-metrics-config.yml

  entityOperator:
    topicOperator: {}
    userOperator: {}

  # Must have at least 2 brokers
  cruiseControl: {}

  kafkaExporter:
    topicRegex: ".*"
    groupRegex: ".*"