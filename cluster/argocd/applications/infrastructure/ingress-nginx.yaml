apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: >
      {"apiVersion":"argoproj.io/v1alpha1","kind":"Application","metadata":{"annotations":{},"creationTimestamp":"2024-04-05T04:45:33Z","generation":1402,"labels":{"project":"infrastructure","source":"external"},"managedFields":[{"apiVersion":"argoproj.io/v1alpha1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:kubectl.kubernetes.io/last-applied-configuration":{}},"f:labels":{".":{},"f:source":{}}},"f:spec":{".":{},"f:destination":{".":{},"f:namespace":{},"f:server":{}},"f:project":{},"f:source":{".":{},"f:chart":{},"f:helm":{".":{},"f:parameters":{}},"f:repoURL":{},"f:targetRevision":{}},"f:syncPolicy":{".":{},"f:syncOptions":{}}},"f:status":{".":{},"f:controllerNamespace":{},"f:health":{},"f:summary":{},"f:sync":{".":{},"f:comparedTo":{".":{},"f:destination":{".":{},"f:namespace":{},"f:server":{}},"f:source":{".":{},"f:chart":{},"f:helm":{".":{},"f:parameters":{}},"f:repoURL":{},"f:targetRevision":{}}}}}},"manager":"kubectl-client-side-apply","operation":"Update","time":"2024-04-05T04:45:33Z"},{"apiVersion":"argoproj.io/v1alpha1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{"f:project":{}}}},"manager":"argocd-server","operation":"Update","time":"2024-04-12T17:19:33Z"},{"apiVersion":"argoproj.io/v1alpha1","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:health":{"f:status":{}},"f:history":{},"f:operationState":{".":{},"f:finishedAt":{},"f:message":{},"f:operation":{".":{},"f:initiatedBy":{".":{},"f:username":{}},"f:retry":{},"f:sync":{".":{},"f:revision":{},"f:syncOptions":{},"f:syncStrategy":{".":{},"f:hook":{}}}},"f:phase":{},"f:startedAt":{},"f:syncResult":{".":{},"f:resources":{},"f:revision":{},"f:source":{".":{},"f:chart":{},"f:helm":{".":{},"f:parameters":{}},"f:repoURL":{},"f:targetRevision":{}}}},"f:reconciledAt":{},"f:resources":{},"f:sourceType":{},"f:summary":{"f:images":{}},"f:sync":{"f:revision":{},"f:status":{}}}},"manager":"argocd-application-controller","operation":"Update","time":"2024-04-12T18:11:31Z"}],"name":"ingress-nginx","namespace":"argocd","resourceVersion":"1241320","selfLink":"/apis/argoproj.io/v1alpha1/namespaces/argocd/applications/ingress-nginx","uid":"32260485-fd05-4849-acbb-b50475e2f43c"},"spec":{"destination":{"namespace":"ingress-nginx","server":"https://kubernetes.default.svc"},"project":"infrastructure","source":{"chart":"ingress-nginx","helm":{"parameters":[{"name":"controller.service.loadBalancerIP"}]},"repoURL":"https://kubernetes.github.io/ingress-nginx","targetRevision":"4.10.0"},"syncPolicy":{"syncOptions":["CreateNamespace=true"]}},"status":{"controllerNamespace":"argocd","health":{"status":"Healthy"},"history":[{"deployStartedAt":"2024-04-02T13:40:50Z","deployedAt":"2024-04-02T13:41:44Z","id":0,"revision":"4.10.0","source":{"chart":"ingress-nginx","helm":{"parameters":[{"name":"controller.service.loadBalancerIP"}]},"repoURL":"https://kubernetes.github.io/ingress-nginx","targetRevision":"4.10.0"}},{"deployStartedAt":"2024-04-05T05:04:47Z","deployedAt":"2024-04-05T05:05:49Z","id":1,"revision":"4.10.0","source":{"chart":"ingress-nginx","helm":{"parameters":[{"name":"controller.service.loadBalancerIP"}]},"repoURL":"https://kubernetes.github.io/ingress-nginx","targetRevision":"4.10.0"}}],"operationState":{"finishedAt":"2024-04-05T05:05:49Z","message":"successfully
      synced (no more
      tasks)","operation":{"initiatedBy":{"username":"admin"},"retry":{},"sync":{"revision":"4.10.0","syncOptions":["CreateNamespace=true"],"syncStrategy":{"hook":{}}}},"phase":"Succeeded","startedAt":"2024-04-05T05:04:47Z","syncResult":{"resources":[{"group":"","hookPhase":"Succeeded","hookType":"PreSync","kind":"ServiceAccount","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PreSync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","hookType":"PreSync","kind":"ClusterRole","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PreSync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","hookType":"PreSync","kind":"ClusterRoleBinding","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PreSync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","hookType":"PreSync","kind":"Role","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PreSync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","hookType":"PreSync","kind":"RoleBinding","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PreSync","version":"v1"},{"group":"batch","hookPhase":"Succeeded","hookType":"PreSync","kind":"Job","message":"job.batch/ingress-nginx-admission-create
      created","name":"ingress-nginx-admission-create","namespace":"ingress-nginx","syncPhase":"PreSync","version":"v1"},{"group":"","hookPhase":"Succeeded","kind":"ServiceAccount","message":"serviceaccount/ingress-nginx
      created","name":"ingress-nginx","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"","hookPhase":"Succeeded","kind":"ConfigMap","message":"configmap/ingress-nginx-controller
      created","name":"ingress-nginx-controller","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","kind":"ClusterRole","message":"clusterrole.rbac.authorization.k8s.io/ingress-nginx
      reconciled. reconciliation required create\n\tmissing rules
      added:\n\t\t{Verbs:[list watch] APIGroups:[] Resources:[configmaps
      endpoints nodes pods secrets namespaces] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[list watch]
      APIGroups:[coordination.k8s.io] Resources:[leases] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[get] APIGroups:[] Resources:[nodes]
      ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch]
      APIGroups:[] Resources:[services] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[get list watch]
      APIGroups:[networking.k8s.io] Resources:[ingresses] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[create patch] APIGroups:[]
      Resources:[events] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[update] APIGroups:[networking.k8s.io]
      Resources:[ingresses/status] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[get list watch]
      APIGroups:[networking.k8s.io] Resources:[ingressclasses] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[list watch get]
      APIGroups:[discovery.k8s.io] Resources:[endpointslices] ResourceNames:[]
      NonResourceURLs:[]}. clusterrole.rbac.authorization.k8s.io/ingress-nginx
      configured. Warning: resource clusterroles/ingress-nginx is missing the
      kubectl.kubernetes.io/last-applied-configuration annotation which is
      required by  apply.  apply should only be used on resources created
      declaratively by either  create --save-config or  apply. The missing
      annotation will be patched
      automatically.","name":"ingress-nginx","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","kind":"ClusterRoleBinding","message":"clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx
      reconciled. reconciliation required create\n\tmissing subjects
      added:\n\t\t{Kind:ServiceAccount APIGroup: Name:ingress-nginx
      Namespace:ingress-nginx}.
      clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx configured.
      Warning: resource clusterrolebindings/ingress-nginx is missing the
      kubectl.kubernetes.io/last-applied-configuration annotation which is
      required by  apply.  apply should only be used on resources created
      declaratively by either  create --save-config or  apply. The missing
      annotation will be patched
      automatically.","name":"ingress-nginx","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","kind":"Role","message":"role.rbac.authorization.k8s.io/ingress-nginx
      reconciled. reconciliation required create\n\tmissing rules
      added:\n\t\t{Verbs:[get] APIGroups:[] Resources:[namespaces]
      ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch]
      APIGroups:[] Resources:[configmaps pods secrets endpoints]
      ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch]
      APIGroups:[] Resources:[services] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[get list watch]
      APIGroups:[networking.k8s.io] Resources:[ingresses] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[update] APIGroups:[networking.k8s.io]
      Resources:[ingresses/status] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[get list watch]
      APIGroups:[networking.k8s.io] Resources:[ingressclasses] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[get update]
      APIGroups:[coordination.k8s.io] Resources:[leases]
      ResourceNames:[ingress-nginx-leader]
      NonResourceURLs:[]}\n\t\t{Verbs:[create] APIGroups:[coordination.k8s.io]
      Resources:[leases] ResourceNames:[]
      NonResourceURLs:[]}\n\t\t{Verbs:[create patch] APIGroups:[]
      Resources:[events] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[list
      watch get] APIGroups:[discovery.k8s.io] Resources:[endpointslices]
      ResourceNames:[] NonResourceURLs:[]}.
      role.rbac.authorization.k8s.io/ingress-nginx configured. Warning: resource
      roles/ingress-nginx is missing the
      kubectl.kubernetes.io/last-applied-configuration annotation which is
      required by  apply.  apply should only be used on resources created
      declaratively by either  create --save-config or  apply. The missing
      annotation will be patched
      automatically.","name":"ingress-nginx","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","kind":"RoleBinding","message":"rolebinding.rbac.authorization.k8s.io/ingress-nginx
      reconciled. reconciliation required create\n\tmissing subjects
      added:\n\t\t{Kind:ServiceAccount APIGroup: Name:ingress-nginx
      Namespace:ingress-nginx}.
      rolebinding.rbac.authorization.k8s.io/ingress-nginx configured. Warning:
      resource rolebindings/ingress-nginx is missing the
      kubectl.kubernetes.io/last-applied-configuration annotation which is
      required by  apply.  apply should only be used on resources created
      declaratively by either  create --save-config or  apply. The missing
      annotation will be patched
      automatically.","name":"ingress-nginx","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"","hookPhase":"Succeeded","kind":"Service","message":"service/ingress-nginx-controller-admission
      created","name":"ingress-nginx-controller-admission","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"","hookPhase":"Succeeded","kind":"Service","message":"service/ingress-nginx-controller
      created","name":"ingress-nginx-controller","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"apps","hookPhase":"Succeeded","kind":"Deployment","message":"deployment.apps/ingress-nginx-controller
      created","name":"ingress-nginx-controller","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"networking.k8s.io","hookPhase":"Succeeded","kind":"IngressClass","message":"ingressclass.networking.k8s.io/nginx
      created","name":"nginx","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"admissionregistration.k8s.io","hookPhase":"Succeeded","kind":"ValidatingWebhookConfiguration","message":"validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","status":"Synced","syncPhase":"Sync","version":"v1"},{"group":"","hookPhase":"Succeeded","hookType":"PostSync","kind":"ServiceAccount","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PostSync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","hookType":"PostSync","kind":"ClusterRole","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PostSync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","hookType":"PostSync","kind":"ClusterRoleBinding","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PostSync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","hookType":"PostSync","kind":"Role","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PostSync","version":"v1"},{"group":"rbac.authorization.k8s.io","hookPhase":"Succeeded","hookType":"PostSync","kind":"RoleBinding","message":"ingress-nginx-admission
      created","name":"ingress-nginx-admission","namespace":"ingress-nginx","syncPhase":"PostSync","version":"v1"},{"group":"batch","hookPhase":"Succeeded","hookType":"PostSync","kind":"Job","message":"job.batch/ingress-nginx-admission-patch
      created","name":"ingress-nginx-admission-patch","namespace":"ingress-nginx","syncPhase":"PostSync","version":"v1"}],"revision":"4.10.0","source":{"chart":"ingress-nginx","helm":{"parameters":[{"name":"controller.service.loadBalancerIP"}]},"repoURL":"https://kubernetes.github.io/ingress-nginx","targetRevision":"4.10.0"}}},"reconciledAt":"2024-04-12T18:11:30Z","resources":[{"kind":"ConfigMap","name":"ingress-nginx-controller","namespace":"ingress-nginx","status":"Synced","version":"v1"},{"health":{"status":"Healthy"},"kind":"Service","name":"ingress-nginx-controller","namespace":"ingress-nginx","status":"Synced","version":"v1"},{"health":{"status":"Healthy"},"kind":"Service","name":"ingress-nginx-controller-admission","namespace":"ingress-nginx","status":"Synced","version":"v1"},{"kind":"ServiceAccount","name":"ingress-nginx","namespace":"ingress-nginx","status":"Synced","version":"v1"},{"group":"admissionregistration.k8s.io","kind":"ValidatingWebhookConfiguration","name":"ingress-nginx-admission","status":"Synced","version":"v1"},{"group":"apps","health":{"status":"Healthy"},"kind":"Deployment","name":"ingress-nginx-controller","namespace":"ingress-nginx","status":"Synced","version":"v1"},{"group":"networking.k8s.io","kind":"IngressClass","name":"nginx","status":"Synced","version":"v1"},{"group":"rbac.authorization.k8s.io","kind":"ClusterRole","name":"ingress-nginx","status":"Synced","version":"v1"},{"group":"rbac.authorization.k8s.io","kind":"ClusterRoleBinding","name":"ingress-nginx","status":"Synced","version":"v1"},{"group":"rbac.authorization.k8s.io","kind":"Role","name":"ingress-nginx","namespace":"ingress-nginx","status":"Synced","version":"v1"},{"group":"rbac.authorization.k8s.io","kind":"RoleBinding","name":"ingress-nginx","namespace":"ingress-nginx","status":"Synced","version":"v1"}],"sourceType":"Helm","summary":{"images":["registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c"]},"sync":{"comparedTo":{"destination":{"namespace":"ingress-nginx","server":"https://kubernetes.default.svc"},"source":{"chart":"ingress-nginx","helm":{"parameters":[{"name":"controller.service.loadBalancerIP"}]},"repoURL":"https://kubernetes.github.io/ingress-nginx","targetRevision":"4.10.0"}},"revision":"4.10.0","status":"Synced"}}}
  creationTimestamp: '2024-04-25T20:20:49Z'
  generation: 1413
  labels:
    project: infrastructure
    source: external
  managedFields:
    - apiVersion: argoproj.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:kubectl.kubernetes.io/last-applied-configuration: {}
          f:labels:
            .: {}
            f:project: {}
            f:source: {}
        f:spec:
          .: {}
          f:destination:
            .: {}
            f:namespace: {}
            f:server: {}
          f:project: {}
          f:source:
            .: {}
            f:chart: {}
            f:helm:
              .: {}
              f:parameters: {}
            f:repoURL: {}
            f:targetRevision: {}
          f:syncPolicy:
            .: {}
            f:syncOptions: {}
        f:status:
          .: {}
          f:controllerNamespace: {}
          f:health: {}
          f:summary: {}
          f:sync:
            .: {}
            f:comparedTo:
              .: {}
              f:destination:
                .: {}
                f:namespace: {}
                f:server: {}
              f:source:
                .: {}
                f:chart: {}
                f:helm:
                  .: {}
                  f:parameters: {}
                f:repoURL: {}
                f:targetRevision: {}
      manager: kubectl-client-side-apply
      operation: Update
      time: '2024-04-25T20:20:49Z'
    - apiVersion: argoproj.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:health:
            f:status: {}
          f:history: {}
          f:operationState:
            .: {}
            f:finishedAt: {}
            f:message: {}
            f:operation:
              .: {}
              f:initiatedBy:
                .: {}
                f:username: {}
              f:retry: {}
              f:sync:
                .: {}
                f:revision: {}
                f:syncOptions: {}
                f:syncStrategy:
                  .: {}
                  f:hook: {}
            f:phase: {}
            f:startedAt: {}
            f:syncResult:
              .: {}
              f:resources: {}
              f:revision: {}
              f:source:
                .: {}
                f:chart: {}
                f:helm:
                  .: {}
                  f:parameters: {}
                f:repoURL: {}
                f:targetRevision: {}
          f:reconciledAt: {}
          f:resources: {}
          f:sourceType: {}
          f:summary:
            f:images: {}
          f:sync:
            f:revision: {}
            f:status: {}
      manager: argocd-application-controller
      operation: Update
      time: '2024-05-03T16:58:38Z'
  name: ingress-nginx
  namespace: argocd
  resourceVersion: '1534446'
  uid: 6858685b-c387-4cc0-a265-1b388e27003c
  selfLink: /apis/argoproj.io/v1alpha1/namespaces/argocd/applications/ingress-nginx
status:
  controllerNamespace: argocd
  health:
    status: Healthy
  history:
    - deployStartedAt: '2024-04-02T13:40:50Z'
      deployedAt: '2024-04-02T13:41:44Z'
      id: 0
      revision: 4.10.0
      source:
        chart: ingress-nginx
        helm:
          parameters:
            - name: controller.service.loadBalancerIP
        repoURL: https://kubernetes.github.io/ingress-nginx
        targetRevision: 4.10.0
    - deployStartedAt: '2024-04-05T05:04:47Z'
      deployedAt: '2024-04-05T05:05:49Z'
      id: 1
      revision: 4.10.0
      source:
        chart: ingress-nginx
        helm:
          parameters:
            - name: controller.service.loadBalancerIP
        repoURL: https://kubernetes.github.io/ingress-nginx
        targetRevision: 4.10.0
    - deployStartedAt: '2024-04-25T23:57:29Z'
      deployedAt: '2024-04-25T23:58:25Z'
      id: 2
      revision: 4.10.0
      source:
        chart: ingress-nginx
        helm:
          parameters:
            - name: controller.service.loadBalancerIP
        repoURL: https://kubernetes.github.io/ingress-nginx
        targetRevision: 4.10.0
  operationState:
    finishedAt: '2024-04-25T23:58:25Z'
    message: successfully synced (no more tasks)
    operation:
      initiatedBy:
        username: admin
      retry: {}
      sync:
        revision: 4.10.0
        syncOptions:
          - CreateNamespace=true
        syncStrategy:
          hook: {}
    phase: Succeeded
    startedAt: '2024-04-25T23:57:29Z'
    syncResult:
      resources:
        - group: ''
          hookPhase: Running
          kind: Namespace
          message: namespace/ingress-nginx created
          name: ingress-nginx
          namespace: ''
          status: Synced
          syncPhase: PreSync
          version: v1
        - group: ''
          hookPhase: Succeeded
          hookType: PreSync
          kind: ServiceAccount
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PreSync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          hookType: PreSync
          kind: ClusterRole
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PreSync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          hookType: PreSync
          kind: ClusterRoleBinding
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PreSync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          hookType: PreSync
          kind: Role
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PreSync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          hookType: PreSync
          kind: RoleBinding
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PreSync
          version: v1
        - group: batch
          hookPhase: Succeeded
          hookType: PreSync
          kind: Job
          message: job.batch/ingress-nginx-admission-create created
          name: ingress-nginx-admission-create
          namespace: ingress-nginx
          syncPhase: PreSync
          version: v1
        - group: ''
          hookPhase: Succeeded
          kind: ServiceAccount
          message: serviceaccount/ingress-nginx created
          name: ingress-nginx
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Succeeded
          kind: ConfigMap
          message: configmap/ingress-nginx-controller created
          name: ingress-nginx-controller
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          kind: ClusterRole
          message: "clusterrole.rbac.authorization.k8s.io/ingress-nginx reconciled. reconciliation required create\n\tmissing rules added:\n\t\t{Verbs:[list watch] APIGroups:[] Resources:[configmaps endpoints nodes pods secrets namespaces] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[list watch] APIGroups:[coordination.k8s.io] Resources:[leases] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get] APIGroups:[] Resources:[nodes] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch] APIGroups:[] Resources:[services] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch] APIGroups:[networking.k8s.io] Resources:[ingresses] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[create patch] APIGroups:[] Resources:[events] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[update] APIGroups:[networking.k8s.io] Resources:[ingresses/status] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch] APIGroups:[networking.k8s.io] Resources:[ingressclasses] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[list watch get] APIGroups:[discovery.k8s.io] Resources:[endpointslices] ResourceNames:[] NonResourceURLs:[]}. clusterrole.rbac.authorization.k8s.io/ingress-nginx configured. Warning: resource clusterroles/ingress-nginx is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by  apply.  apply should only be used on resources created declaratively by either  create --save-config or  apply. The missing annotation will be patched automatically."
          name: ingress-nginx
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          kind: ClusterRoleBinding
          message: "clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx reconciled. reconciliation required create\n\tmissing subjects added:\n\t\t{Kind:ServiceAccount APIGroup: Name:ingress-nginx Namespace:ingress-nginx}. clusterrolebinding.rbac.authorization.k8s.io/ingress-nginx configured. Warning: resource clusterrolebindings/ingress-nginx is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by  apply.  apply should only be used on resources created declaratively by either  create --save-config or  apply. The missing annotation will be patched automatically."
          name: ingress-nginx
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          kind: Role
          message: "role.rbac.authorization.k8s.io/ingress-nginx reconciled. reconciliation required create\n\tmissing rules added:\n\t\t{Verbs:[get] APIGroups:[] Resources:[namespaces] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch] APIGroups:[] Resources:[configmaps pods secrets endpoints] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch] APIGroups:[] Resources:[services] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch] APIGroups:[networking.k8s.io] Resources:[ingresses] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[update] APIGroups:[networking.k8s.io] Resources:[ingresses/status] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get list watch] APIGroups:[networking.k8s.io] Resources:[ingressclasses] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[get update] APIGroups:[coordination.k8s.io] Resources:[leases] ResourceNames:[ingress-nginx-leader] NonResourceURLs:[]}\n\t\t{Verbs:[create] APIGroups:[coordination.k8s.io] Resources:[leases] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[create patch] APIGroups:[] Resources:[events] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[list watch get] APIGroups:[discovery.k8s.io] Resources:[endpointslices] ResourceNames:[] NonResourceURLs:[]}. role.rbac.authorization.k8s.io/ingress-nginx configured. Warning: resource roles/ingress-nginx is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by  apply.  apply should only be used on resources created declaratively by either  create --save-config or  apply. The missing annotation will be patched automatically."
          name: ingress-nginx
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          kind: RoleBinding
          message: "rolebinding.rbac.authorization.k8s.io/ingress-nginx reconciled. reconciliation required create\n\tmissing subjects added:\n\t\t{Kind:ServiceAccount APIGroup: Name:ingress-nginx Namespace:ingress-nginx}. rolebinding.rbac.authorization.k8s.io/ingress-nginx configured. Warning: resource rolebindings/ingress-nginx is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by  apply.  apply should only be used on resources created declaratively by either  create --save-config or  apply. The missing annotation will be patched automatically."
          name: ingress-nginx
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Succeeded
          kind: Service
          message: service/ingress-nginx-controller-admission created
          name: ingress-nginx-controller-admission
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Succeeded
          kind: Service
          message: service/ingress-nginx-controller created
          name: ingress-nginx-controller
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: apps
          hookPhase: Succeeded
          kind: Deployment
          message: deployment.apps/ingress-nginx-controller created
          name: ingress-nginx-controller
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: networking.k8s.io
          hookPhase: Succeeded
          kind: IngressClass
          message: ingressclass.networking.k8s.io/nginx created
          name: nginx
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: admissionregistration.k8s.io
          hookPhase: Succeeded
          kind: ValidatingWebhookConfiguration
          message: >-
            validatingwebhookconfiguration.admissionregistration.k8s.io/ingress-nginx-admission
            created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Succeeded
          hookType: PostSync
          kind: ServiceAccount
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PostSync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          hookType: PostSync
          kind: ClusterRole
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PostSync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          hookType: PostSync
          kind: ClusterRoleBinding
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PostSync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          hookType: PostSync
          kind: Role
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PostSync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Succeeded
          hookType: PostSync
          kind: RoleBinding
          message: ingress-nginx-admission created
          name: ingress-nginx-admission
          namespace: ingress-nginx
          syncPhase: PostSync
          version: v1
        - group: batch
          hookPhase: Succeeded
          hookType: PostSync
          kind: Job
          message: job.batch/ingress-nginx-admission-patch created
          name: ingress-nginx-admission-patch
          namespace: ingress-nginx
          syncPhase: PostSync
          version: v1
      revision: 4.10.0
      source:
        chart: ingress-nginx
        helm:
          parameters:
            - name: controller.service.loadBalancerIP
        repoURL: https://kubernetes.github.io/ingress-nginx
        targetRevision: 4.10.0
  reconciledAt: '2024-05-03T16:58:38Z'
  resources:
    - kind: ConfigMap
      name: ingress-nginx-controller
      namespace: ingress-nginx
      status: Synced
      version: v1
    - health:
        status: Healthy
      kind: Service
      name: ingress-nginx-controller
      namespace: ingress-nginx
      status: Synced
      version: v1
    - health:
        status: Healthy
      kind: Service
      name: ingress-nginx-controller-admission
      namespace: ingress-nginx
      status: Synced
      version: v1
    - kind: ServiceAccount
      name: ingress-nginx
      namespace: ingress-nginx
      status: Synced
      version: v1
    - group: admissionregistration.k8s.io
      kind: ValidatingWebhookConfiguration
      name: ingress-nginx-admission
      status: Synced
      version: v1
    - group: apps
      health:
        status: Healthy
      kind: Deployment
      name: ingress-nginx-controller
      namespace: ingress-nginx
      status: Synced
      version: v1
    - group: networking.k8s.io
      kind: IngressClass
      name: nginx
      status: Synced
      version: v1
    - group: rbac.authorization.k8s.io
      kind: ClusterRole
      name: ingress-nginx
      status: Synced
      version: v1
    - group: rbac.authorization.k8s.io
      kind: ClusterRoleBinding
      name: ingress-nginx
      status: Synced
      version: v1
    - group: rbac.authorization.k8s.io
      kind: Role
      name: ingress-nginx
      namespace: ingress-nginx
      status: Synced
      version: v1
    - group: rbac.authorization.k8s.io
      kind: RoleBinding
      name: ingress-nginx
      namespace: ingress-nginx
      status: Synced
      version: v1
  sourceType: Helm
  summary:
    images:
      - >-
        registry.k8s.io/ingress-nginx/controller:v1.10.0@sha256:42b3f0e5d0846876b1791cd3afeb5f1cbbe4259d6f35651dcc1b5c980925379c
  sync:
    comparedTo:
      destination:
        namespace: ingress-nginx
        server: https://kubernetes.default.svc
      source:
        chart: ingress-nginx
        helm:
          parameters:
            - name: controller.service.loadBalancerIP
        repoURL: https://kubernetes.github.io/ingress-nginx
        targetRevision: 4.10.0
    revision: 4.10.0
    status: Synced
spec:
  destination:
    namespace: ingress-nginx
    server: https://kubernetes.default.svc
  project: infrastructure
  source:
    chart: ingress-nginx
    helm:
      parameters:
        - name: controller.service.loadBalancerIP
    repoURL: https://kubernetes.github.io/ingress-nginx
    targetRevision: 4.10.0
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
