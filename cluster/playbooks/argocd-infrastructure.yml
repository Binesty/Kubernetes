- name: Installing argocd infrastructure packages and configure cluster
  hosts: commands
  gather_facts: False

  tasks:    
    - name: Label worker nodes
      shell: kubectl label --overwrite nodes {{ item.node }} kubernetes.io/role=worker-{{ item.index }}
      ignore_errors: yes
      loop:
        - { node: binesty-worker-01, index: 01 }
        - { node: binesty-worker-02, index: 02 }
        - { node: binesty-worker-03, index: 03 }
        - { node: binesty-worker-04, index: 04 }
        - { node: binesty-worker-05, index: 05 }
        - { node: binesty-worker-06, index: 06 }
        - { node: binesty-worker-10, index: 07 }

    - name: Label management nodes
      ignore_errors: yes
      shell: kubectl label nodes binesty-master node-group=management

    - name: Label management nodes remove taint
      shell: kubectl label nodes {{ item }} node-group=management
      shell: kubectl taint nodes {{ item }} node-role.kubernetes.io/control-plane:NoSchedule- --overwrite
      ignore_errors: yes
      loop:
        - binesty-master        

    - name: Label application nodes
      shell: kubectl label nodes {{ item }} node-group=application
      ignore_errors: yes
      loop:        
        - binesty-worker-01
        - binesty-worker-02
        - binesty-worker-03
        - binesty-worker-04
        - binesty-worker-05
        - binesty-worker-06
        - binesty-worker-10

    - name: Label kafka nodes
      shell: kubectl label nodes {{ item }} broker=kafka
      ignore_errors: yes
      loop:        
        - binesty-worker-01
        - binesty-worker-02
        - binesty-worker-03

    - name: Delete directory Remote argocd
      become: yes 
      ignore_errors: yes
      file:
        path: /tmp/semaphore/argocd
        state: absent

    - name: Copy argocd folder to remote
      copy:
        src: /semaphore/argocd
        dest: /tmp/semaphore

    - name: Create namespaces
      command: kubectl apply -f /tmp/semaphore/argocd/namespaces
      ignore_errors: yes

    - name: Delete repositories
      command: kubectl delete secret -n argocd --selector=argocd.argoproj.io/secret-type=repository
      ignore_errors: yes
    - name: Create repositories
      command: kubectl apply -f /tmp/semaphore/argocd/repositories
      ignore_errors: yes

    - name: Delete projects
      command: kubectl delete appproject --all -n argocd     
      ignore_errors: yes
    - name: Create projects
      command: kubectl apply -f /tmp/semaphore/argocd/projects
      ignore_errors: yes

    - name: Clean applications infrastructure
      command: kubectl delete application --all -n argocd --selector=project=infrastructure
      ignore_errors: yes
    - name: Create applications infrastructure
      command: kubectl apply -f /tmp/semaphore/argocd/applications/infrastructure
      ignore_errors: yes     
