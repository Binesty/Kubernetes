apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  creationTimestamp: '2023-07-11T18:18:12Z'
  generation: 4636
  labels:
    source: external
  managedFields:
    - apiVersion: argoproj.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:source: {}
        f:spec:
          .: {}
          f:destination:
            .: {}
            f:namespace: {}
            f:server: {}
          f:project: {}
          f:source:
            .: {}
            f:chart: {}
            f:helm:
              .: {}
              f:parameters: {}
            f:repoURL: {}
            f:targetRevision: {}
          f:syncPolicy:
            .: {}
            f:syncOptions: {}
        f:status:
          .: {}
          f:health: {}
          f:summary: {}
          f:sync:
            .: {}
            f:comparedTo:
              .: {}
              f:destination: {}
              f:source: {}
      manager: argocd-server
      operation: Update
      time: '2023-08-01T13:23:06Z'
    - apiVersion: argoproj.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:health:
            f:status: {}
          f:history: {}
          f:operationState:
            .: {}
            f:finishedAt: {}
            f:message: {}
            f:operation:
              .: {}
              f:initiatedBy:
                .: {}
                f:username: {}
              f:retry: {}
              f:sync:
                .: {}
                f:revision: {}
                f:syncOptions: {}
                f:syncStrategy:
                  .: {}
                  f:hook: {}
            f:phase: {}
            f:startedAt: {}
            f:syncResult:
              .: {}
              f:resources: {}
              f:revision: {}
              f:source:
                .: {}
                f:chart: {}
                f:helm:
                  .: {}
                  f:parameters: {}
                f:repoURL: {}
                f:targetRevision: {}
          f:reconciledAt: {}
          f:resources: {}
          f:sourceType: {}
          f:sync:
            f:comparedTo:
              f:destination:
                f:namespace: {}
                f:server: {}
              f:source:
                f:chart: {}
                f:helm:
                  .: {}
                  f:parameters: {}
                f:repoURL: {}
                f:targetRevision: {}
            f:revision: {}
            f:status: {}
      manager: argocd-application-controller
      operation: Update
      time: '2023-08-03T20:31:40Z'
  name: rabbitmq
  namespace: argocd
  resourceVersion: '4519714'
  uid: 4ad28479-17f6-41fa-a3fa-bd3ae25ea335
  selfLink: /apis/argoproj.io/v1alpha1/namespaces/argocd/applications/rabbitmq
status:
  health:
    status: Healthy
  history:
    - deployStartedAt: '2023-07-11T18:19:02Z'
      deployedAt: '2023-07-11T18:19:14Z'
      id: 0
      revision: 12.0.4
      source:
        chart: rabbitmq
        helm:
          parameters:
            - name: auth.password
              value: user
            - name: replicaCount
              value: '3'
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.0.4
  operationState:
    finishedAt: '2023-07-11T18:19:14Z'
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        username: admin
      retry: {}
      sync:
        revision: 12.0.4
        syncOptions:
          - CreateNamespace=true
        syncStrategy:
          hook: {}
    phase: Succeeded
    startedAt: '2023-07-11T18:19:02Z'
    syncResult:
      resources:
        - group: ''
          hookPhase: Running
          kind: Namespace
          message: namespace/rabbitmq created
          name: rabbitmq
          namespace: ''
          status: Synced
          syncPhase: PreSync
          version: v1
        - group: ''
          hookPhase: Running
          kind: ServiceAccount
          message: serviceaccount/rabbitmq created
          name: rabbitmq
          namespace: rabbitmq
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Running
          kind: Secret
          message: secret/rabbitmq created
          name: rabbitmq
          namespace: rabbitmq
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Running
          kind: Secret
          message: secret/rabbitmq-config created
          name: rabbitmq-config
          namespace: rabbitmq
          status: Synced
          syncPhase: Sync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Running
          kind: Role
          message: "role.rbac.authorization.k8s.io/rabbitmq-endpoint-reader reconciled. reconciliation required create\n\tmissing rules added:\n\t\t{Verbs:[get] APIGroups:[] Resources:[endpoints] ResourceNames:[] NonResourceURLs:[]}\n\t\t{Verbs:[create] APIGroups:[] Resources:[events] ResourceNames:[] NonResourceURLs:[]}. role.rbac.authorization.k8s.io/rabbitmq-endpoint-reader configured. Warning: resource roles/rabbitmq-endpoint-reader is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by  apply.  apply should only be used on resources created declaratively by either  create --save-config or  apply. The missing annotation will be patched automatically."
          name: rabbitmq-endpoint-reader
          namespace: rabbitmq
          status: Synced
          syncPhase: Sync
          version: v1
        - group: rbac.authorization.k8s.io
          hookPhase: Running
          kind: RoleBinding
          message: "rolebinding.rbac.authorization.k8s.io/rabbitmq-endpoint-reader reconciled. reconciliation required create\n\tmissing subjects added:\n\t\t{Kind:ServiceAccount APIGroup: Name:rabbitmq Namespace:}. rolebinding.rbac.authorization.k8s.io/rabbitmq-endpoint-reader configured. Warning: resource rolebindings/rabbitmq-endpoint-reader is missing the kubectl.kubernetes.io/last-applied-configuration annotation which is required by  apply.  apply should only be used on resources created declaratively by either  create --save-config or  apply. The missing annotation will be patched automatically."
          name: rabbitmq-endpoint-reader
          namespace: rabbitmq
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Running
          kind: Service
          message: service/rabbitmq created
          name: rabbitmq
          namespace: rabbitmq
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Running
          kind: Service
          message: service/rabbitmq-headless created
          name: rabbitmq-headless
          namespace: rabbitmq
          status: Synced
          syncPhase: Sync
          version: v1
        - group: apps
          hookPhase: Running
          kind: StatefulSet
          message: statefulset.apps/rabbitmq created
          name: rabbitmq
          namespace: rabbitmq
          status: Synced
          syncPhase: Sync
          version: v1
      revision: 12.0.4
      source:
        chart: rabbitmq
        helm:
          parameters:
            - name: auth.password
              value: user
            - name: replicaCount
              value: '3'
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.0.4
  reconciledAt: '2023-08-03T20:31:40Z'
  resources:
    - kind: Secret
      name: rabbitmq
      namespace: rabbitmq
      status: OutOfSync
      version: v1
    - kind: Secret
      name: rabbitmq-config
      namespace: rabbitmq
      status: Synced
      version: v1
    - health:
        status: Healthy
      kind: Service
      name: rabbitmq
      namespace: rabbitmq
      status: Synced
      version: v1
    - health:
        status: Healthy
      kind: Service
      name: rabbitmq-headless
      namespace: rabbitmq
      status: Synced
      version: v1
    - kind: ServiceAccount
      name: rabbitmq
      namespace: rabbitmq
      status: Synced
      version: v1
    - group: apps
      health:
        message: >-
          statefulset rolling update complete 0 pods at revision
          rabbitmq-66796db755...
        status: Healthy
      kind: StatefulSet
      name: rabbitmq
      namespace: rabbitmq
      status: OutOfSync
      version: v1
    - group: rbac.authorization.k8s.io
      kind: Role
      name: rabbitmq-endpoint-reader
      namespace: rabbitmq
      status: Synced
      version: v1
    - group: rbac.authorization.k8s.io
      kind: RoleBinding
      name: rabbitmq-endpoint-reader
      namespace: rabbitmq
      status: Synced
      version: v1
  sourceType: Helm
  summary: {}
  sync:
    comparedTo:
      destination:
        namespace: rabbitmq
        server: https://kubernetes.default.svc
      source:
        chart: rabbitmq
        helm:
          parameters:
            - name: auth.password
              value: user
            - name: replicaCount
              value: '3'
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.0.4
    revision: 12.0.4
    status: OutOfSync
spec:
  destination:
    namespace: rabbitmq
    server: https://kubernetes.default.svc
  project: infrastructure
  source:
    chart: rabbitmq
    helm:
      parameters:
        - name: auth.password
          value: user
        - name: replicaCount
          value: '3'
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 12.0.4
  syncPolicy:
    syncOptions:
      - CreateNamespace=true
