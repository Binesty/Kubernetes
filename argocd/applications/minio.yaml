apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  creationTimestamp: '2023-06-29T03:08:37Z'
  generation: 363
  labels:
    source: external
  managedFields:
    - apiVersion: argoproj.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:labels:
            .: {}
            f:source: {}
        f:spec:
          .: {}
          f:destination:
            .: {}
            f:namespace: {}
            f:server: {}
          f:project: {}
          f:source:
            .: {}
            f:chart: {}
            f:helm:
              .: {}
              f:parameters: {}
            f:repoURL: {}
            f:targetRevision: {}
          f:syncPolicy:
            .: {}
            f:automated: {}
            f:syncOptions: {}
        f:status:
          .: {}
          f:health: {}
          f:summary: {}
          f:sync:
            .: {}
            f:comparedTo:
              .: {}
              f:destination: {}
              f:source: {}
      manager: argocd-server
      operation: Update
      time: '2023-06-29T21:24:13Z'
    - apiVersion: argoproj.io/v1alpha1
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:health:
            f:status: {}
          f:history: {}
          f:operationState:
            .: {}
            f:finishedAt: {}
            f:message: {}
            f:operation:
              .: {}
              f:initiatedBy:
                .: {}
                f:username: {}
              f:retry: {}
              f:sync:
                .: {}
                f:revision: {}
                f:syncOptions: {}
                f:syncStrategy:
                  .: {}
                  f:hook: {}
            f:phase: {}
            f:startedAt: {}
            f:syncResult:
              .: {}
              f:resources: {}
              f:revision: {}
              f:source:
                .: {}
                f:chart: {}
                f:helm:
                  .: {}
                  f:parameters: {}
                f:repoURL: {}
                f:targetRevision: {}
          f:reconciledAt: {}
          f:resources: {}
          f:sourceType: {}
          f:summary:
            f:externalURLs: {}
            f:images: {}
          f:sync:
            f:comparedTo:
              f:destination:
                f:namespace: {}
                f:server: {}
              f:source:
                f:chart: {}
                f:helm:
                  .: {}
                  f:parameters: {}
                f:repoURL: {}
                f:targetRevision: {}
            f:revision: {}
            f:status: {}
      manager: argocd-application-controller
      operation: Update
      time: '2023-06-29T23:24:52Z'
  name: minio
  namespace: argocd
  resourceVersion: '16369829'
  uid: 76b77446-b2a4-4e06-b90c-dabe25bdda8b
  selfLink: /apis/argoproj.io/v1alpha1/namespaces/argocd/applications/minio
status:
  health:
    status: Healthy
  history:
    - deployStartedAt: '2023-06-29T03:10:25Z'
      deployedAt: '2023-06-29T03:10:29Z'
      id: 0
      revision: 12.6.5
      source:
        chart: minio
        helm:
          parameters:
            - name: global.storageClass
              value: longhorn
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.6.5
    - deployStartedAt: '2023-06-29T12:50:49Z'
      deployedAt: '2023-06-29T12:50:50Z'
      id: 1
      revision: 12.6.5
      source:
        chart: minio
        helm:
          parameters:
            - name: global.storageClass
              value: longhorn
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.6.5
    - deployStartedAt: '2023-06-29T14:56:55Z'
      deployedAt: '2023-06-29T14:56:59Z'
      id: 2
      revision: 12.6.5
      source:
        chart: minio
        helm:
          parameters:
            - name: global.storageClass
              value: longhorn
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.6.5
    - deployStartedAt: '2023-06-29T20:07:32Z'
      deployedAt: '2023-06-29T20:07:33Z'
      id: 3
      revision: 12.6.5
      source:
        chart: minio
        helm:
          parameters:
            - name: global.storageClass
              value: longhorn
            - name: apiIngress.enabled
              value: 'true'
            - name: apiIngress.hostname
              value: minio.binesty.net
            - name: apiIngress.ingressClassName
              value: nginx
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.6.5
    - deployStartedAt: '2023-06-29T20:21:59Z'
      deployedAt: '2023-06-29T20:21:59Z'
      id: 4
      revision: 12.6.5
      source:
        chart: minio
        helm:
          parameters:
            - name: ingress.enabled
              value: 'true'
            - name: ingress.hostname
              value: minio.binesty.net
            - name: ingress.ingressClassName
              value: nginx
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.6.5
    - deployStartedAt: '2023-06-29T21:24:13Z'
      deployedAt: '2023-06-29T21:24:14Z'
      id: 5
      revision: 12.6.5
      source:
        chart: minio
        helm:
          parameters:
            - name: ingress.enabled
              value: 'true'
            - name: ingress.hostname
              value: minio.binesty.net
            - name: ingress.ingressClassName
              value: nginx
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.6.5
  operationState:
    finishedAt: '2023-06-29T21:24:14Z'
    message: successfully synced (all tasks run)
    operation:
      initiatedBy:
        username: admin
      retry: {}
      sync:
        revision: 12.6.5
        syncOptions:
          - CreateNamespace=true
        syncStrategy:
          hook: {}
    phase: Succeeded
    startedAt: '2023-06-29T21:24:13Z'
    syncResult:
      resources:
        - group: ''
          hookPhase: Running
          kind: ServiceAccount
          message: >-
            serviceaccount/minio configured. Warning: resource
            serviceaccounts/minio is missing the
            kubectl.kubernetes.io/last-applied-configuration annotation which is
            required by  apply.  apply should only be used on resources created
            declaratively by either  create --save-config or  apply. The missing
            annotation will be patched automatically.
          name: minio
          namespace: minio
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Running
          kind: Secret
          message: >-
            secret/minio configured. Warning: resource secrets/minio is missing
            the kubectl.kubernetes.io/last-applied-configuration annotation
            which is required by  apply.  apply should only be used on resources
            created declaratively by either  create --save-config or  apply. The
            missing annotation will be patched automatically.
          name: minio
          namespace: minio
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Running
          kind: PersistentVolumeClaim
          message: >-
            persistentvolumeclaim/minio configured. Warning: resource
            persistentvolumeclaims/minio is missing the
            kubectl.kubernetes.io/last-applied-configuration annotation which is
            required by  apply.  apply should only be used on resources created
            declaratively by either  create --save-config or  apply. The missing
            annotation will be patched automatically.
          name: minio
          namespace: minio
          status: Synced
          syncPhase: Sync
          version: v1
        - group: ''
          hookPhase: Running
          kind: Service
          message: >-
            service/minio configured. Warning: resource services/minio is
            missing the kubectl.kubernetes.io/last-applied-configuration
            annotation which is required by  apply.  apply should only be used
            on resources created declaratively by either  create --save-config
            or  apply. The missing annotation will be patched automatically.
          name: minio
          namespace: minio
          status: Synced
          syncPhase: Sync
          version: v1
        - group: apps
          hookPhase: Running
          kind: Deployment
          message: >-
            deployment.apps/minio configured. Warning: resource
            deployments/minio is missing the
            kubectl.kubernetes.io/last-applied-configuration annotation which is
            required by  apply.  apply should only be used on resources created
            declaratively by either  create --save-config or  apply. The missing
            annotation will be patched automatically.
          name: minio
          namespace: minio
          status: Synced
          syncPhase: Sync
          version: v1
        - group: networking.k8s.io
          hookPhase: Running
          kind: Ingress
          message: >-
            ingress.networking.k8s.io/minio configured. Warning: resource
            ingresses/minio is missing the
            kubectl.kubernetes.io/last-applied-configuration annotation which is
            required by  apply.  apply should only be used on resources created
            declaratively by either  create --save-config or  apply. The missing
            annotation will be patched automatically.
          name: minio
          namespace: minio
          status: Synced
          syncPhase: Sync
          version: v1
      revision: 12.6.5
      source:
        chart: minio
        helm:
          parameters:
            - name: ingress.enabled
              value: 'true'
            - name: ingress.hostname
              value: minio.binesty.net
            - name: ingress.ingressClassName
              value: nginx
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.6.5
  reconciledAt: '2023-06-29T23:24:52Z'
  resources:
    - health:
        status: Healthy
      kind: PersistentVolumeClaim
      name: minio
      namespace: minio
      status: Synced
      version: v1
    - kind: Secret
      name: minio
      namespace: minio
      status: Synced
      version: v1
    - health:
        status: Healthy
      kind: Service
      name: minio
      namespace: minio
      status: Synced
      version: v1
    - kind: ServiceAccount
      name: minio
      namespace: minio
      status: Synced
      version: v1
    - group: apps
      health:
        status: Healthy
      kind: Deployment
      name: minio
      namespace: minio
      status: Synced
      version: v1
    - group: networking.k8s.io
      health:
        status: Healthy
      kind: Ingress
      name: minio
      namespace: minio
      status: Synced
      version: v1
  sourceType: Helm
  summary:
    externalURLs:
      - http://minio.binesty.net/
    images:
      - docker.io/bitnami/minio:2023.6.19-debian-11-r0
  sync:
    comparedTo:
      destination:
        namespace: minio
        server: https://kubernetes.default.svc
      source:
        chart: minio
        helm:
          parameters:
            - name: ingress.enabled
              value: 'true'
            - name: ingress.hostname
              value: minio.binesty.net
            - name: ingress.ingressClassName
              value: nginx
        repoURL: https://charts.bitnami.com/bitnami
        targetRevision: 12.6.5
    revision: 12.6.5
    status: Synced
spec:
  destination:
    namespace: minio
    server: https://kubernetes.default.svc
  project: infrastructure
  source:
    chart: minio
    helm:
      parameters:
        - name: ingress.enabled
          value: 'true'
        - name: ingress.hostname
          value: minio.binesty.net
        - name: ingress.ingressClassName
          value: nginx
    repoURL: https://charts.bitnami.com/bitnami
    targetRevision: 12.6.5
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true
