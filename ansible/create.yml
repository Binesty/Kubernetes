- name: Installing Kubernetes with Containerd
  hosts: all
  become: true

  vars:
    kubernetes_version: "1.27.0"
    containerd_version: "1.7.13"

  tasks:
    ##### Remove ####  
    - name: Remove packages
      ansible.builtin.import_tasks:
        file: clean.yml

    ##### Install ####
    - name: Get APT Key
      shell:
        cmd: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
        cmd: echo "deb [trusted=yes] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list 

    - name: Download apt key
      get_url:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        dest: /tmp # or /etc/pki/rpm-gpg depending on the infrastructure

    - name: Add a key from a file
      ansible.builtin.apt_key:
        file: /tmp/apt-key.gpg
        state: present

    - name: Add an Apt signing key, uses whichever key is at the URL
      ansible.builtin.apt_key:
        url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
        state: present

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - software-properties-common     
    
    - name: install kubelet
      apt:
        name: kubelet={{ kubernetes_version }}
        state: present
        update_cache: true
    
    - name: install kubeadm
      apt:
        name: kubeadm={{ kubernetes_version }}
        state: present
        
    - name: install kubectl
      apt:
        name: kubectl={{ kubernetes_version }}
        state: present

    - name: Install containerd
      apt:
        name: containerd.io={{ containerd_version }}
        state: present

    - name: Configure Containerd
      copy:
        dest: /etc/modules-load.d/containerd.conf
        content: |
          overlay
          br_netfilter
        mode: '0644'

    - name: Restart the Kernel Modules Service
      command: modprobe overlay
      ignore_errors: yes

    - name: Restart the Kernel Modules Service
      command: modprobe br_netfilter
      ignore_errors: yes

    - name: Disabled swap
      command: swapoff -a
      ignore_errors: true

    - name: Remove the swap entry from /etc/fstab
      lineinfile:
        path: /etc/fstab
        state: absent
        regexp: '^.*\sswap\s.*$'

    - name: Configure sysctl
      sysctl:
        name: "{{ item }}"
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
      with_items:
        - net.bridge.bridge-nf-call-iptables
        - net.bridge.bridge-nf-call-ip6tables
        - net.ipv4.ip_forward

    - name: Start and enable kubelet
      service:
        name: kubelet
        state: started
        enabled: yes

    - name: Initialize the master node with kubeadm
      command: kubeadm init --pod-network-cidr=10.10.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf
      register: kubeadm_init_output
      changed_when: "'kubeadm init' not in kubeadm_init_output.stderr"
      when: inventory_hostname == 'binesty-master'

    - name: Print join token
      debug:
        msg: "Token de junção: {{ kubeadm_init_output.stdout_lines | last }}"
      when: inventory_hostname == 'binesty-master'

    - name: Print join command for worker nodes
      debug:
        msg: "{{ kubeadm_init_output.stdout_lines | last }}"
      when: inventory_hostname == 'binesty-master'

    - name: Join the working nodes to the master
      shell: "{{ item }}"
      with_items: "{{ groups['workers'] }}"
      when: inventory_hostname == 'binesty-master'